1)nodejs is a cross-platform environment and library for running javascript application.
2)It is used for creating network and serverside application.
3)Nodejs is a middleware. Where as javascript,reactjs,angularjs are the frontend.
4)Nodejs is serverside scripting language which is used to build scalable program.
5)it is webapplication framework build on google chrome javascript engine.
6)In nodejs we have 4 layers.
i)client layer:- The client layer contains web browser,mobile browser or application which can make an HTTP request to the web server.
ii)server layer:-The server layer contains the web server which can intercept the request made by client and return back the response.
iii)business layer:-it contains the application server.this layer interact with the data layer
iv)data layer:-The data layer contains the database where the data are stored.
-------------------------------------------------------------------------------
how to create a node program
---------------------------------------------
step 1:- notepad first.js
step 2:-node first.js
-------------------------------------------------------
example-1
--------------------
step 1:npm install http
step 2:node first.js
step 3:localhost:8090
---------------------------------- 
var http=require('http');
http.createServer(function (req,res)
{
res.writeHead(200,{'Content-Type':'text/html'});
res.write("This is weekend Nodejs Batch");
res.write("This is Akshya and Pratiksha");
res.end();
}).listen(8090);
----------------------------------------------------------------------------
example-2
-----------------------
console.log("Hello Students");
console.log("This is weekend Nodejs Batch");
--------------------------------------------------------------------
example-3
-------------------
var buffer1 = new Buffer('apple');
var buffer2 = new Buffer('apple1');
var result = buffer1.compare(buffer2);
if(result == 0)
{
    console.log("Both the strings are equal");
}
else
{
console.log("Both are not equal");
}
------------------------------------------------------------------------------
example-4
------------------
var buffer1 = new Buffer('sandip');
var buffer2 = new Buffer(' Kumar');
var buffer3=Buffer.concat([buffer1,buffer2]);
console.log("buffer3 is :"+buffer3.toString());
-----------------------------------------------------------------------------------
mysql link
---------------------------
https://drive.google.com/drive/folders/14Ht1eOCBnImEDYLwlw8hS4VY63GsSolM?usp=sharing
--------------------------------------------------------------------------------------------
My sql connctivity
---------------------------------------
step 1:- npm install mysql
---------------------------------------
sql notes
-----------------
---------------------
To see the databases
1)show databases;
-----------------------------------------------------
to create database
2)create database mphasis;
--------------------------------------------------------
to goto the database
3)use mphasis;
-------------------------------------------------------------------------------------------
to create table
create table student (rollno int,name varchar(30),address varchar(30));
--------------------------------------------------------------
to insert data into the table
insert into student values(101,'sandip','Bangalore');
insert into student values(102,'Rohan','Bangalore');
-------------------------------------------------------------------------
 to view the data 
select * from student;
----------------------------------------------------------------------------
create table employee (empno int,name varchar(30),address varchar(30));
to add some more columns
alter table student add phy int;
alter table student add bio int;
alter table student add chem int;
alter table student add tot int;
alter table student add avg int;
update student set phy=88,chem=83,bio=74 where rollno=101;
update student set phy=78,chem=73,bio=84 where rollno=102;
update student set phy=68,chem=63,bio=64 where rollno=103;
update student set phy=78,chem=73,bio=84 where rollno=102;
update student set tot=phy+chem+bio ;
update student set avg=tot/3;

to delete a row
delete from student where rollno=101;

to drop a table
drop table student;

to drop a database
drop database mphasis;

to update a row
update student set address='pune' where rollno=101;

wild character
select * from student where name like 's%';
select * from student where name like '%p';

-------------------------------------------------------
to drop database
4)drop database cognizantstud;
-----------------------------------------------------------------------
to create a table
5)create table student
( studid int not null auto_increment,
name varchar(30) not null,
address varchar(30) not null,
primary key(studid)
);
----------------------------------------------------------------------------------
6)to insert record
insert into student values(101,'tarun','chennei');
-----------------------------------------------------------------------------------
7)to view the records 
select * from student;
------------------------------------------------------------
8)update the record
update student set address='Bangalore' where name='tarun';
--------------------------------------------------------------------------
9)to create a view (view will not contain any data.it will contain only the query)
create view stud as select studid,name from student;
we can do insert,update and delete of the view it will reflect to the base table.
-------------------------------------------------------------------------------
10)to see all the tables and views
show tables;
----------------------------------------------------------------------
11)where condition :-
select * from student where name='tarun';
-------------------------------------------------------------------------
12)distinct :-(unique data will be displayed)
select distinct address from student;
-------------------------------------------------------------------------------
13)order by:-
select * from student order by name;
select * from student order by name asc;
select * from student order by name desc;
--------------------------------------------------------------------------------
14)group by
select address, count(*) from student group by address;
-----------------------------------------------------------------------------------
15)aggregate function
count(),sum(),avg(),min(),max(),first(),last()
---------------------------------------------------------------------
i)select count(*) from student;
first record  :- select name from student limit 1;
last record :-select name from student order by name desc limit 1;
--------------------------------------------------------------------------------------------
16)alter table:-
alter table student add salary int not null;
to add data to salary column :-
update student set salary=45000 where studid=101;
update student set salary=35000 where studid in (102,103,104);
---------------------------------------------------------------------------------
17)select sum(salary) from student;
18)select avg(salary) from student;
19)select min(salary) from student;
20)select max(salary) from student;
----------------------------------------------------------------------------------------------
between and example:-
21)select * from student where salary between 30000 and 46000;
----------------------------------------------------------------------------------------------
like % (wildcard)
----------------------------------------------------------------------------
22)select * from student where name like 'p%';(word starting with p will display)
select * from student where name like '%r';(word ending with r will display)
---------------------------------------------------------------------------
23)truncate table:-
it will delete all the data from the table.
truncate table student;
--------------------------------------------------------------------------- 
24)drop table;
it will delete the data as well as the table also.
drop table student;
-------------------------------------------------------------------------------

25)join
------------------------
create table marks
(studid int(4),
phy int(4),
chem int(4),
maths int(4),
tot int(4),avg int(4));

i)insert into marks(studid,phy,chem,maths) values(101,56,67,78);
ii)update marks set tot=(phy+chem+maths) where studid in (101,102,103);
iii)update marks set avg=tot/3 where studid in (101,102,103);
--------------------------------------

joining 2 tables:-
---------------------------
select a.studid,a.name,a.address,a.salary,b.phy,b.chem,b.maths,b.tot,b.avg from student a,marks b where a.studid=b.studid;
---------------------------------
composite KEY
--------------------------------
CREATE TABLE mphasisstudents
( studid INT NOT NULL AUTO_INCREMENT,
NAME VARCHAR(30) NOT NULL,
address VARCHAR(30) NOT NULL,
location VARCHAR(30) NOT NULL,
PRIMARY KEY(studid,NAME)
);

----------------------------------------------------------------------------------------
CREATE TABLE mphasisstudent
( studid INT NOT NULL AUTO_INCREMENT,
NAME VARCHAR(30) DEFAULT NULL UNIQUE,
address VARCHAR(30) DEFAULT NULL,
location VARCHAR(30) DEFAULT NULL,
PRIMARY KEY(studid,NAME)
);
------------------------------End Of MySql-----------------------------------
*npm install mysql

mysql>ALTER USER 'root'@'localhost' IDENTIFIED WITH mysql_native_password BY '1234';
-----------------------------------
example-1
--------------------------
var mysql = require('mysql');
var con=mysql.createConnection({

    host:"localhost",
    user:"root",
    password:"1234"
});

con.connect(function (err)
{
if(err) throw err;
console.log("Data base connected");

});

---------------------------------------------------------------------------
example-2
---------------------
var mysql = require('mysql');
var con=mysql.createConnection({

    host:"localhost",
    user:"root",
    password:"1234"
});

con.connect(function (err)
{
if(err) throw err;
console.log("Database connected");
con.query("create database mphasis",function(err,result)
{
if(err) throw err;
console.log("Database created");
});
});
---------------------------------------------------------------------------
example-3
--------------------------
var mysql = require('mysql');
var con=mysql.createConnection({

    host:"localhost",
    user:"root",
    password:"1234",
    database:"cognizant"
});

con.connect(function (err)
{
if(err) throw err;
console.log("Database connected");
var sql1 = "create table student(rollno int,name varchar(30),address varchar(30))";
con.query(sql1,function(err,result)
{
if(err) throw err;
console.log("Table created");
});
});
------------------------------------------------------------------------------------------------------------------
example-4
-----------------
var mysql = require('mysql');
var con=mysql.createConnection({

    host:"localhost",
    user:"root",
    password:"1234",
    database:"mphasis"
});

con.connect(function (err)
{
if(err) throw err;
console.log("Database connected");
var sql = "insert into student values(101,'sandip','bangalore')";
con.query(sql,function(err,result)
{
if(err) throw err;
console.log("row inserted");
});
});
------------------------------------------------------------------------------------------------
example-5
------------------------
var mysql = require('mysql');
var con=mysql.createConnection({

    host:"localhost",
    user:"root",
    password:"1234",
    database:"mphasis"
});

con.connect(function(err)
 {
  if (err) throw err;
var abc="SELECT * FROM student WHERE address = 'bangalore' ";
  con.query(abc,function (err, result) 
{
    if (err) throw err;
    console.log(result);
  });
});
----------------------------------------------------------------------------------------------------------------------------------
step 1:-import myql package
var mysql = require('mysql');
--------------------------------------------------------------------
step 2:-establish connection
var con=mysql.createConnection({

    host:"localhost",
    user:"root",
    password:"1234",
    database:"mphasis"
});
-------------------------------------------------------------------------
step 3:-with the help of con variable we are going to write a query and execute it.

con.connect(function(err)
 {
  if (err) throw err; <------if there is error in connection it will display the error.
var abc="SELECT * FROM student WHERE address = 'bangalore' ";  <- variable where the query is stored.
  
-------------------------------------------------------------------------------------------------------------
step 4:-
con.query(abc,function (err, result)  <----to execute the query or it will give an error 
{
    if (err) throw err;
    console.log(result);
  });
});

-------------------------------------------------------------------------------------------------------------
example-6
----------------------
var mysql = require('mysql');

var con = mysql.createConnection({
  host:"localhost",
    user:"root",
    password:"1234",
    database:"mphasis"
});

con.connect(function(err) {
  if (err) throw err;
  con.query("SELECT * FROM student ORDER BY name DESC", function (err, result) 
{
    if (err) throw err;
    console.log(result);
  });
});
---------------------------------------------------------------------------------------
example-7
----------------------
var mysql = require('mysql');

var con = mysql.createConnection({
  host:"localhost",
    user:"root",
    password:"1234",
    database:"mphasis"
});

con.connect(function(err) {
  if (err) throw err;
  con.query("SELECT * FROM student ORDER BY address asc", function (err, result) 
{
    if (err) throw err;
    console.log(result);
  });
});
------------------------------------------------------------
example-8
--------------------
var mysql = require('mysql');

var con = mysql.createConnection({
  host: "localhost",
  user: "root",
  password: "1234",
  database: "mphasis"
});

con.connect(function(err) {
  if (err) throw err;
  var sql = "DELETE FROM student WHERE name like  '%ya' ";

  con.query(sql, function (err, result) {
    if (err) throw err;
    console.log("Number of records deleted: " + result.affectedRows);
  });
});
---------------------------------------------------------------------------------
example-8
--------------------
var mysql = require('mysql');

var con = mysql.createConnection({
  host: "localhost",
  user: "root",
  password: "1234",
  database: "mphasis"
});

con.connect(function(err) {
  if (err) throw err;
  var sql = "DELETE FROM student WHERE name like  's%' ";

  con.query(sql, function (err, result) {
    if (err) throw err;
    console.log("Number of records deleted: " + result.affectedRows);
  });
});
------------------------------------------------------------------------------------------------
example-9
--------------------
var mysql = require('mysql');

var con = mysql.createConnection({
  host: "localhost",
  user: "root",
  password: "1234",
  database: "mphasis"
});

con.connect(function(err) {
  if (err) throw err;
  var sql = "DELETE FROM student WHERE rollno is=101";

  con.query(sql, function (err, result) {
    if (err) throw err;
    console.log("Number of records deleted: " + result.affectedRows);
  });
});
------------------------------------------------------------------------------------------
example-10
----------------------
var mysql = require('mysql');

var con = mysql.createConnection({
  host: "localhost",
  user: "root",
  password: "1234",
  database: "mphasis"
});

con.connect(function(err) {
  if (err) throw err;
  var sql = "DROP TABLE student";
  con.query(sql, function (err, result) 
{
    if (err) throw err;
    console.log("Table deleted");
  });
});
--------------------------------------------------------------------------------------------------------
example-11
-------------------
var mysql = require('mysql');

var con = mysql.createConnection({
  host: "localhost",
  user: "root",
  password: "1234",
  database: "mphasis"
});

con.connect(function(err) {
  if (err) throw err;
  var sql = "UPDATE student SET address = 'UK' WHERE name = 'Sandip' ";
  con.query(sql, function (err, result) {
    if (err) throw err;
    console.log(result.affectedRows + " record(s) updated");
  });
});
---------------------------------------------------------------------
example-12
--------------------
var mysql = require('mysql');

var con = mysql.createConnection({
  host: "localhost",
  user: "root",
  password: "1234",
  database: "mphasis"
});

con.connect(function(err) {
  if (err) throw err;
  var sql = "select count(*) from student";
  con.query(sql, function (err, result) {
    if (err) throw err;
    console.log(result);
  });
});
-----------------------------------------
example-13
------------------------
var mysql = require('mysql');

var con = mysql.createConnection({
  host: "localhost",
  user: "root",
  password: "1234",
  database: "mphasis"
});

con.connect(function(err) {
  if (err) throw err;
  var sql = "update student set phoneno=7766553300 where name in('sandip','guru')";
  con.query(sql, function (err, result) {
    if (err) throw err;
    console.log(result);
  });
});
------------------------------------------------------------------------
example-14
------------------------
var mysql = require('mysql');

var con = mysql.createConnection({
  host: "localhost",
  user: "root",
  password: "1234",
  database: "mphasis"
});

con.connect(function(err) {
  if (err) throw err;
  var sql = "alter table student add phoneno int";
  con.query(sql, function (err, result) {
    if (err) throw err;
    console.log(result);
  });
});
------------------------------------------------------------------------
MongoDB
-------------------
link:-https://fastdl.mongodb.org/windows/mongodb-windows-x86_64-5.0.9-signed.msi
--------------------------------------------------------------
Mongodb:-
----------------
Database :- Mysql,sqlserver,Oracle  -structured database (rows and columns)

Mongodb,cacendra :- unstructured database.Data will be in form of document.
*company which use it are *facebook,paytm,etc..

1)mongodb is a cross-platform ,document oriented base,high performance,easy scalability.
2)mongodb works on concept of collection and document.
3)data is stored in key and value pair. 
example :-document format,JSON
name:'Koyel',
email:'Koyel@gmail.com',
username:'koyel',
password:'1234'
-------------------------------------------------------------------
RDBMS			Mongodb
-------------------------------------------------------------------
Table			collection
database			database
Tuple/row			document
column			field
table join			embedded document
PrimaryKey		default key_id provided by mongodb itself
-------------------------------------------------------------------------------------------------------
3)document :- it is a set of key-value pairs.
4)collection is a group of mongodb document.
----------------------------------------------------------------
example of a collection
-----------------------------------
comment:
[
{
user:"Koyel",
message:"Good Morning",
dateCreated: new Date(2018,15,1,12,20),
like:120
},
{
user:"Aritra",
message:"Good Morning",
dateCreated: new Date(2018,15,1,12,20),
like:125
}
]
---------------------------------------------------------------------------
www.mongodb.org official website.
---------------------------------------------------------------------------
CREATE FOLDER :- C:\data\db
---------------------------------------------------
software link :- https://www.mongodb.com/try/download/community

1)to view database
show databases;
show dbs;
----------------------------------------------
2)to create database and switch database
use mphasisstudents;
-------------------------------------------------------
3)to show no of tables
show tables;
show collections;
---------------------------------------------------------
4)to see the database in which you are working
db;
------------------------------------------------------------
5)to create table/collection
db.createCollection('student');
---------------------------------------------------------------
6)to insert data into student
db.student.insert({name:'Koyel',email:'Koyel@gmail.com',username:'koyel',password:'1234'});
--------------------------------------------------------------------------------------
7)to view the rows/document
db.student.find();
--------------------------------------------------------
8)to view the rows/document in a proper order
db.student.find().pretty();
---------------------------------------------------------
9)to update the document
db.student.update({email:'sunil@gmail.com'},{$set:{password:'sunil@1'}});
----------------------------------------------------------------------
10)to delete the document
db.student.remove({username:'susmita'});
----------------------------------------------------------------
npm install mongodb
---------------------------------------
example-1
----------------------
var MongoClient=require('mongodb').MongoClient;

var url="mongodb://localhost:27017/weekendBatch";

MongoClient.connect(url,function(err,db)
{
if(err) throw err;
console.log("Database Created");
db.close();
});
--------------------------------------------------------------------------------------------------
example-2
----------------------
var MongoClient=require('mongodb').MongoClient;

var url="mongodb://localhost:27017/weekendBatch";

MongoClient.connect(url,function(err,db)
{
if(err) throw err;
var dbo=db.db("weekendBatch");
dbo.createCollection("student",function(err,res)
{
if(err) throw err;
console.log("Collection created");
db.close();
});
});
----------------------------------------------------------------------------------------------
example-3
-------------------------
var MongoClient=require('mongodb').MongoClient;

var url="mongodb://localhost:27017/weekendBatch";

MongoClient.connect(url,function(err,db)
{
if(err) throw err;
var dbo=db.db("weekendBatch");
var myobj=[{name:"akshya",address:"bangalore",email:"akshya@gmail.com"},
{name:"guru",address:"bangalore",email:"guru@gmail.com"},
{name:"Pratiksha",address:"bangalore",email:"pratiksha@gmail.com"}];

dbo.collection("student").insert(myobj,function(err,res)
{
if(err) throw err;
console.log("row inserted :"+res.insertedCount);
db.close();
});
});
--------------------------------------------------------------------------------------
findOne():- This is used to display the first record in the collection.
---------------------------------------------------------------------------------------
example-4
-------------------------
var MongoClient=require('mongodb').MongoClient;

var url="mongodb://localhost:27017/weekendBatch";

MongoClient.connect(url,function(err,db)
{
if(err) throw err;
var dbo=db.db("weekendBatch");
dbo.collection("student").findOne({},function(err,res)
{
if(err) throw err;
console.log("First Name is:"+res.name);
console.log("First Address is:"+res.address);
console.log("First email is:"+res.email);
db.close();
});
});

------------------------------------------------------------------------------------
example-5
---------------------
find by name
---------------------
var MongoClient=require('mongodb').MongoClient;

var url="mongodb://localhost:27017/weekendBatch";

MongoClient.connect(url,function(err,db)
{
if(err) throw err;
var dbo=db.db("weekendBatch");
var qry={name:"akshya"};
dbo.collection("student").find(qry).toArray(function(err,res)
{
if(err) throw err;
console.log(res);
db.close();
});
});
-------------------------------------------------------------------------
example-6
---------------------
find by address
---------------------
var MongoClient=require('mongodb').MongoClient;

var url="mongodb://localhost:27017/weekendBatch";

MongoClient.connect(url,function(err,db)
{
if(err) throw err;
var dbo=db.db("weekendBatch");
var qry={address:"bangalore"};
dbo.collection("student").find(qry).toArray(function(err,res)
{
if(err) throw err;
console.log(res);
db.close();
});
});
-------------------------------------------------------------------------
example-7
-------------------
sorting in (1)ascending and (-1)descending order
-------------------------------------------------------------
var MongoClient=require('mongodb').MongoClient;

var url="mongodb://localhost:27017/weekendBatch";

MongoClient.connect(url,function(err,db)
{
if(err) throw err;
var dbo=db.db("weekendBatch");
var qry={email: 1};
dbo.collection("student").find().sort(qry).toArray(function(err,res)
{
if(err) throw err;
console.log(res);
db.close();
});
});
------------------------------------------------------------------------
example-8
-------------------
sorting in (1)ascending and (-1)descending order
-------------------------------------------------------------
var MongoClient=require('mongodb').MongoClient;

var url="mongodb://localhost:27017/weekendBatch";

MongoClient.connect(url,function(err,db)
{
if(err) throw err;
var dbo=db.db("weekendBatch");
var qry={email: -1};
dbo.collection("student").find().sort(qry).toArray(function(err,res)
{
if(err) throw err;
console.log(res);
db.close();
});
});
------------------------------------------------------------------------
example-9
-------------------
delete a row according to name
---------------------------------------------------------------------
var MongoClient=require('mongodb').MongoClient;

var url="mongodb://localhost:27017/weekendBatch";

MongoClient.connect(url,function(err,db)
{
if(err) throw err;
var dbo=db.db("weekendBatch");
var qry={name: 'akshya'};
dbo.collection("student").deleteOne(qry,function(err,res)
{
if(err) throw err;
console.log("1 row deleted");
db.close();
});
});
----------------------------------------------------------------
To update record in the Collection
----------------------------------------------------------------
example-10
--------------------------
var MongoClient=require('mongodb').MongoClient;

var url="mongodb://localhost:27017/weekendBatch";

MongoClient.connect(url,function(err,db)
{
if(err) throw err;
var dbo=db.db("weekendBatch");
var qry={address:"bangalore"};
var newqry={$set:{address:"Bangalore"}};
dbo.collection("student").updateMany(qry,newqry,function(err,res)
{
if(err) throw err;
console.log("1 row updated");
db.close();
});
});
---------------------------------------------------------------------------------------------------------------------
To display 2 records in the collection
----------------------------------------------------------
example-11
--------------------------
var MongoClient=require('mongodb').MongoClient;

var url="mongodb://localhost:27017/weekendBatch";

MongoClient.connect(url,function(err,db)
{
if(err) throw err;
var dbo=db.db("weekendBatch");
dbo.collection("student").find().limit(2).toArray(function(err,res)
{
if(err) throw err;
console.log(res);
db.close();
});
});
----------------------------------------------------------------
example-12
--------------------------
var MongoClient=require('mongodb').MongoClient;

var url="mongodb://localhost:27017/weekendBatch";

MongoClient.connect(url,function(err,db)
{
if(err) throw err;
var dbo=db.db("weekendBatch");
dbo.collection("student").drop(function(err,delOK)
{
if(err) throw err;
if(delOK)
console.log("table/collection deleted");
db.close();
});
});
----------------------------------------------------------------



